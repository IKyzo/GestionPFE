// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionPFE.Migrations
{
    [DbContext(typeof(SoutenanceContext))]
    [Migration("20231202132313_mg2")]
    partial class mg2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionPFE.Models.Enseignant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Enseignant");
                });

            modelBuilder.Entity("GestionPFE.Models.Etudiant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateNaiss")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Etudiant");
                });

            modelBuilder.Entity("GestionPFE.Models.PFE", b =>
                {
                    b.Property<int>("PFEID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PFEID"));

                    b.Property<DateTime>("DateD")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateF")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EncadrantID")
                        .HasColumnType("int");

                    b.Property<int>("SocieteID")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PFEID");

                    b.HasIndex("EncadrantID");

                    b.HasIndex("SocieteID");

                    b.ToTable("PFE");
                });

            modelBuilder.Entity("GestionPFE.Models.PFE_Etudiant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("EtudiantID")
                        .HasColumnType("int");

                    b.Property<int>("PFEID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EtudiantID");

                    b.HasIndex("PFEID");

                    b.ToTable("PFE_Etudiant");
                });

            modelBuilder.Entity("GestionPFE.Models.Societe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lib")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Societe");
                });

            modelBuilder.Entity("GestionPFE.Models.Soutenance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Heure")
                        .HasColumnType("time");

                    b.Property<int>("PFEID")
                        .HasColumnType("int");

                    b.Property<int>("PresidentID")
                        .HasColumnType("int");

                    b.Property<int>("RapporteurID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PFEID");

                    b.HasIndex("PresidentID");

                    b.HasIndex("RapporteurID");

                    b.ToTable("Soutenance");
                });

            modelBuilder.Entity("GestionPFE.Models.PFE", b =>
                {
                    b.HasOne("GestionPFE.Models.Enseignant", "Encadrant")
                        .WithMany("EncadrantPFEs")
                        .HasForeignKey("EncadrantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionPFE.Models.Societe", "Societe")
                        .WithMany()
                        .HasForeignKey("SocieteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encadrant");

                    b.Navigation("Societe");
                });

            modelBuilder.Entity("GestionPFE.Models.PFE_Etudiant", b =>
                {
                    b.HasOne("GestionPFE.Models.Etudiant", "Etudiant")
                        .WithMany()
                        .HasForeignKey("EtudiantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionPFE.Models.PFE", "PFE")
                        .WithMany("PFE_Etudiants")
                        .HasForeignKey("PFEID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etudiant");

                    b.Navigation("PFE");
                });

            modelBuilder.Entity("GestionPFE.Models.Soutenance", b =>
                {
                    b.HasOne("GestionPFE.Models.PFE", "PFE")
                        .WithMany()
                        .HasForeignKey("PFEID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionPFE.Models.Enseignant", "President")
                        .WithMany("PresidentSoutenances")
                        .HasForeignKey("PresidentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionPFE.Models.Enseignant", "Rapporteur")
                        .WithMany("RapporteurSoutenances")
                        .HasForeignKey("RapporteurID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PFE");

                    b.Navigation("President");

                    b.Navigation("Rapporteur");
                });

            modelBuilder.Entity("GestionPFE.Models.Enseignant", b =>
                {
                    b.Navigation("EncadrantPFEs");

                    b.Navigation("PresidentSoutenances");

                    b.Navigation("RapporteurSoutenances");
                });

            modelBuilder.Entity("GestionPFE.Models.PFE", b =>
                {
                    b.Navigation("PFE_Etudiants");
                });
#pragma warning restore 612, 618
        }
    }
}
